name: CI/CD Pipeline

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]

permissions:
  contents: read
  actions: write

env:
  NODE_VERSION_MATRIX: '["16", "18", "20"]'

jobs:
  # 基本的なlintとタイプチェック
  lint-and-type-check:
    name: Lint & Type Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Check TypeScript
        run: npx tsc --noEmit

      - name: Check Prettier formatting
        run: npx prettier --check "src/**/*.{ts,tsx,js,jsx,json,css,md}"

  # セキュリティ監査
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level=high
        continue-on-error: true

  # 複数Node.jsバージョンでのテスト
  test:
    name: Test (Node ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16, 18, 20]

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v5
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test -- --watchAll=false

  # カバレッジ生成（deployment-check用）
  coverage:
    name: Generate Coverage
    runs-on: ubuntu-latest
    needs: [test]

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npm run test:ci

      - name: Debug - Verify coverage directory
        run: |
          echo "Listing coverage directory..."
          ls -laR coverage/ || echo "Coverage directory not found after tests"
          echo "Current directory:"
          ls -la
          echo "Coverage summary content:"
          if [ -f coverage/coverage-summary.json ]; then
            cat coverage/coverage-summary.json
          else
            echo "coverage-summary.json NOT FOUND"
          fi

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: |
            coverage/coverage-summary.json
            coverage/lcov.info
          if-no-files-found: error
          retention-days: 7

  # ビルドテスト
  build:
    name: Build Test
    runs-on: ubuntu-latest
    needs: [lint-and-type-check]

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Debug - Verify build directory
        run: |
          echo "Listing build directory..."
          ls -la build/ || echo "Build directory not found"
          echo "Build directory size:"
          du -sh build/ || echo "Cannot measure build size"

      - name: Check build size
        run: |
          echo "Build completed successfully!"
          du -sh build/
          find build -name "*.js" -exec wc -c {} + | sort -n

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: build
          if-no-files-found: error
          retention-days: 7

  # デプロイメント準備チェック（実質的な品質ゲート）
  deployment-check:
    name: Deployment Readiness
    runs-on: ubuntu-latest
    needs: [build, security-audit]

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npm run test:ci

      - name: Debug - List files after coverage run
        run: |
          echo "--- Listing files in workspace root ---"
          ls -la
          echo "--- Checking for coverage directory ---"
          if [ -d "coverage" ]; then
            echo "Coverage directory exists. Listing contents:"
            ls -laR coverage
          else
            echo "Coverage directory NOT found."
          fi

      - name: Build project
        run: npm run build

      - name: Check test coverage threshold
        run: node scripts/check-coverage.js
        env:
          COVERAGE_THRESHOLD: 10

      - name: Check bundle size
        run: node scripts/check-bundle-size.js
        env:
          MAX_BUNDLE_SIZE_MB: 1

      - name: Verify TypeScript compilation
        run: npx tsc --noEmit

      - name: Check for security vulnerabilities
        run: npm audit --audit-level=high --production
        continue-on-error: true

      - name: Quality gate summary
        run: |
          echo ""
          echo "📊 Quality Gate Report"
          echo "═══════════════════════════════════════"
          echo "✅ Test Coverage: Meets threshold (≥30%)"
          echo "✅ Bundle Size: Within limit (≤1MB)"
          echo "✅ TypeScript: No errors"
          echo "✅ Security: Audit completed"
          echo "═══════════════════════════════════════"
          echo "🚀 Deployment approved!"
          echo ""
